
20:23:52.296 [info] Starting benchmark

20:23:52.316 [debug] Pipeline start link: module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264,
pipeline options: %Membrane.VideoCompositor.Pipeline.Utility.Options{inputs: [%Membrane.VideoCompositor.Pipeline.Utility.InputStream{caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {60, 1}, pixel_format: :I420, aligned: true}, z_value: 0.0, position: {0, 0}, scale: 1.0, input: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264"}, %Membrane.VideoCompositor.Pipeline.Utility.InputStream{caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {60, 1}, pixel_format: :I420, aligned: true}, z_value: 0.0, position: {0, 1080}, scale: 1.0, input: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264"}, %Membrane.VideoCompositor.Pipeline.Utility.InputStream{caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {60, 1}, pixel_format: :I420, aligned: true}, z_value: 0.0, position: {1920, 0}, scale: 1.0, input: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264"}, %Membrane.VideoCompositor.Pipeline.Utility.InputStream{caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {60, 1}, pixel_format: :I420, aligned: true}, z_value: 0.0, position: {1920, 1080}, scale: 1.0, input: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264"}], output: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/out-120s_1920x1080_60fps.h264", caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}, compositor: nil, decoder: nil, encoder: nil},
process options: []


20:23:52.337 [debug] [pipeline@<0.389.0>] Initializing spec
children: %{}
links: [%Membrane.ParentSpec.LinkBuilder{children: [sink: %Membrane.File.Sink{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/out-120s_1920x1080_60fps.h264"}, encoder: Membrane.H264.FFmpeg.Encoder, compositor: %Membrane.VideoCompositor{caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}}], links: [%{from: :encoder, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: :compositor, from_pad: :output, from_pad_props: %{options: []}, to: :encoder, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}, %Membrane.ParentSpec.LinkBuilder{children: [decoder_0: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, source_0: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}], links: [%{from: :decoder_0, from_pad: :output, from_pad_props: %{options: []}, to: :compositor, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [position: {0, 0}, z_value: 0.0, scale: 1.0], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: :source_0, from_pad: :output, from_pad_props: %{options: []}, to: :decoder_0, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}, %Membrane.ParentSpec.LinkBuilder{children: [decoder_1: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, source_1: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}], links: [%{from: :decoder_1, from_pad: :output, from_pad_props: %{options: []}, to: :compositor, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [position: {0, 1080}, z_value: 0.0, scale: 1.0], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: :source_1, from_pad: :output, from_pad_props: %{options: []}, to: :decoder_1, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}, %Membrane.ParentSpec.LinkBuilder{children: [decoder_2: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, source_2: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}], links: [%{from: :decoder_2, from_pad: :output, from_pad_props: %{options: []}, to: :compositor, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [position: {1920, 0}, z_value: 0.0, scale: 1.0], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: :source_2, from_pad: :output, from_pad_props: %{options: []}, to: :decoder_2, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}, %Membrane.ParentSpec.LinkBuilder{children: [decoder_3: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, source_3: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}], links: [%{from: :decoder_3, from_pad: :output, from_pad_props: %{options: []}, to: :compositor, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [position: {1920, 1080}, z_value: 0.0, scale: 1.0], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: :source_3, from_pad: :output, from_pad_props: %{options: []}, to: :decoder_3, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}]


20:23:52.347 [debug] [pipeline@<0.389.0>] Starting children: [%Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/out-120s_1920x1080_60fps.h264"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :encoder, module: Membrane.H264.FFmpeg.Encoder, options: %Membrane.H264.FFmpeg.Encoder{crf: 23, preset: :medium, profile: nil, use_shm?: false, max_b_frames: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :compositor, module: Membrane.VideoCompositor, options: %Membrane.VideoCompositor{caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :decoder_0, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :source_0, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :decoder_1, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :source_1, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :decoder_2, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :source_2, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :decoder_3, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :source_3, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}]

20:23:52.347 [debug] [pipeline@<0.389.0>] Starting child: name: :sink, module: Membrane.File.Sink

20:23:52.350 [debug] [pipeline@<0.389.0>] Element start: :sink
node: ,
module: Membrane.File.Sink,
element options: %Membrane.File.Sink{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/out-120s_1920x1080_60fps.h264"},
method: start


20:23:52.355 [debug] [:sink] Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/out-120s_1920x1080_60fps.h264"}

20:23:52.358 [debug] [:sink] Element initialized: Membrane.File.Sink

20:23:52.359 [debug] [pipeline@<0.389.0>] Starting child: name: :encoder, module: Membrane.H264.FFmpeg.Encoder

20:23:52.359 [debug] [pipeline@<0.389.0>] Element start: :encoder
node: ,
module: Membrane.H264.FFmpeg.Encoder,
element options: %Membrane.H264.FFmpeg.Encoder{crf: 23, preset: :medium, profile: nil, use_shm?: false, max_b_frames: nil},
method: start


20:23:52.359 [debug] [:encoder] Initializing element: Membrane.H264.FFmpeg.Encoder, options: %Membrane.H264.FFmpeg.Encoder{crf: 23, preset: :medium, profile: nil, use_shm?: false, max_b_frames: nil}

20:23:52.359 [debug] [:encoder] Element initialized: Membrane.H264.FFmpeg.Encoder

20:23:52.359 [debug] [pipeline@<0.389.0>] Starting child: name: :compositor, module: Membrane.VideoCompositor

20:23:52.359 [debug] [pipeline@<0.389.0>] Element start: :compositor
node: ,
module: Membrane.VideoCompositor,
element options: %Membrane.VideoCompositor{caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}},
method: start


20:23:52.360 [debug] [:compositor] Initializing element: Membrane.VideoCompositor, options: %Membrane.VideoCompositor{caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}}

20:23:52.382 [debug] [:compositor] Element initialized: Membrane.VideoCompositor

20:23:52.382 [debug] [pipeline@<0.389.0>] Starting child: name: :decoder_0, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder

20:23:52.383 [debug] [pipeline@<0.389.0>] Bin start: :decoder_0
node: ,
module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder,
bin options: nil


20:23:52.384 [debug] [:decoder_0 bin] Initializing spec
children: %{decoder: Membrane.H264.FFmpeg.Decoder, parser: Membrane.H264.FFmpeg.Parser}
links: [%Membrane.ParentSpec.LinkBuilder{children: [], links: [%{from: :decoder, from_pad: :output, from_pad_props: %{options: []}, to: {Membrane.Bin, :itself}, to_pad: :output, to_pad_props: %{}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :decoder, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: {Membrane.Bin, :itself}, from_pad: :input, from_pad_props: %{}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}]


20:23:52.388 [debug] [:decoder_0 bin] Starting children: [%Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56728>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56728>, playback_sync: :not_synced, terminating?: false}]

20:23:52.388 [debug] [:decoder_0 bin] Starting child: name: :decoder, module: Membrane.H264.FFmpeg.Decoder

20:23:52.388 [debug] [:decoder_0 bin] Element start: :decoder
node: ,
module: Membrane.H264.FFmpeg.Decoder,
element options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false},
method: start


20:23:52.388 [debug] [:decoder] Initializing element: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}

20:23:52.388 [debug] [:decoder] Element initialized: Membrane.H264.FFmpeg.Decoder

20:23:52.388 [debug] [:decoder_0 bin] Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser

20:23:52.388 [debug] [:decoder_0 bin] Element start: :parser
node: ,
module: Membrane.H264.FFmpeg.Parser,
element options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true},
method: start


20:23:52.389 [debug] [:parser] Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}

20:23:52.389 [debug] [:parser] Element initialized: Membrane.H264.FFmpeg.Parser

20:23:52.403 [debug] [:parser] Element handle link on pad :output with pad :input of child :decoder

20:23:52.405 [debug] [:decoder] Element handle link on pad :input with pad :output of child :parser

20:23:52.411 [debug] [:decoder_0 bin] Spec #Reference<0.3206031225.1495531521.56728> linked internally

20:23:52.411 [debug] [:decoder_0 bin] Linking spec #Reference<0.3206031225.1495531521.56728> externally

20:23:52.411 [debug] [pipeline@<0.389.0>] Starting child: name: :source_0, module: Membrane.File.Source

20:23:52.411 [debug] [pipeline@<0.389.0>] Element start: :source_0
node: ,
module: Membrane.File.Source,
element options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048},
method: start


20:23:52.411 [debug] [:source_0] Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}

20:23:52.411 [debug] [:source_0] Element initialized: Membrane.File.Source

20:23:52.411 [debug] [pipeline@<0.389.0>] Starting child: name: :decoder_1, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder

20:23:52.412 [debug] [pipeline@<0.389.0>] Bin start: :decoder_1
node: ,
module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder,
bin options: nil


20:23:52.412 [debug] [:decoder_1 bin] Initializing spec
children: %{decoder: Membrane.H264.FFmpeg.Decoder, parser: Membrane.H264.FFmpeg.Parser}
links: [%Membrane.ParentSpec.LinkBuilder{children: [], links: [%{from: :decoder, from_pad: :output, from_pad_props: %{options: []}, to: {Membrane.Bin, :itself}, to_pad: :output, to_pad_props: %{}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :decoder, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: {Membrane.Bin, :itself}, from_pad: :input, from_pad_props: %{}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}]


20:23:52.412 [debug] [:decoder_1 bin] Starting children: [%Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56804>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56804>, playback_sync: :not_synced, terminating?: false}]

20:23:52.412 [debug] [:decoder_1 bin] Starting child: name: :decoder, module: Membrane.H264.FFmpeg.Decoder

20:23:52.412 [debug] [:decoder_1 bin] Element start: :decoder
node: ,
module: Membrane.H264.FFmpeg.Decoder,
element options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false},
method: start


20:23:52.412 [debug] [:decoder] Initializing element: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}

20:23:52.412 [debug] [:decoder] Element initialized: Membrane.H264.FFmpeg.Decoder

20:23:52.412 [debug] [:decoder_1 bin] Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser

20:23:52.412 [debug] [:decoder_1 bin] Element start: :parser
node: ,
module: Membrane.H264.FFmpeg.Parser,
element options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true},
method: start


20:23:52.412 [debug] [:parser] Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}

20:23:52.412 [debug] [:parser] Element initialized: Membrane.H264.FFmpeg.Parser

20:23:52.412 [debug] [:parser] Element handle link on pad :output with pad :input of child :decoder

20:23:52.412 [debug] [:decoder] Element handle link on pad :input with pad :output of child :parser

20:23:52.413 [debug] [:decoder_1 bin] Spec #Reference<0.3206031225.1495531521.56804> linked internally

20:23:52.413 [debug] [:decoder_1 bin] Linking spec #Reference<0.3206031225.1495531521.56804> externally

20:23:52.413 [debug] [pipeline@<0.389.0>] Starting child: name: :source_1, module: Membrane.File.Source

20:23:52.413 [debug] [pipeline@<0.389.0>] Element start: :source_1
node: ,
module: Membrane.File.Source,
element options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048},
method: start


20:23:52.413 [debug] [:source_1] Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}

20:23:52.413 [debug] [:source_1] Element initialized: Membrane.File.Source

20:23:52.413 [debug] [pipeline@<0.389.0>] Starting child: name: :decoder_2, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder

20:23:52.413 [debug] [pipeline@<0.389.0>] Bin start: :decoder_2
node: ,
module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder,
bin options: nil


20:23:52.413 [debug] [:decoder_2 bin] Initializing spec
children: %{decoder: Membrane.H264.FFmpeg.Decoder, parser: Membrane.H264.FFmpeg.Parser}
links: [%Membrane.ParentSpec.LinkBuilder{children: [], links: [%{from: :decoder, from_pad: :output, from_pad_props: %{options: []}, to: {Membrane.Bin, :itself}, to_pad: :output, to_pad_props: %{}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :decoder, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: {Membrane.Bin, :itself}, from_pad: :input, from_pad_props: %{}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}]


20:23:52.413 [debug] [:decoder_2 bin] Starting children: [%Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56841>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56841>, playback_sync: :not_synced, terminating?: false}]

20:23:52.413 [debug] [:decoder_2 bin] Starting child: name: :decoder, module: Membrane.H264.FFmpeg.Decoder

20:23:52.413 [debug] [:decoder_2 bin] Element start: :decoder
node: ,
module: Membrane.H264.FFmpeg.Decoder,
element options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false},
method: start


20:23:52.413 [debug] [:decoder] Initializing element: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}

20:23:52.413 [debug] [:decoder] Element initialized: Membrane.H264.FFmpeg.Decoder

20:23:52.413 [debug] [:decoder_2 bin] Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser

20:23:52.413 [debug] [:decoder_2 bin] Element start: :parser
node: ,
module: Membrane.H264.FFmpeg.Parser,
element options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true},
method: start


20:23:52.413 [debug] [:parser] Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}

20:23:52.413 [debug] [:parser] Element initialized: Membrane.H264.FFmpeg.Parser

20:23:52.414 [debug] [:parser] Element handle link on pad :output with pad :input of child :decoder

20:23:52.414 [debug] [:decoder] Element handle link on pad :input with pad :output of child :parser

20:23:52.414 [debug] [:decoder_2 bin] Spec #Reference<0.3206031225.1495531521.56841> linked internally

20:23:52.414 [debug] [:decoder_2 bin] Linking spec #Reference<0.3206031225.1495531521.56841> externally

20:23:52.414 [debug] [pipeline@<0.389.0>] Starting child: name: :source_2, module: Membrane.File.Source

20:23:52.414 [debug] [pipeline@<0.389.0>] Element start: :source_2
node: ,
module: Membrane.File.Source,
element options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048},
method: start


20:23:52.414 [debug] [:source_2] Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}

20:23:52.414 [debug] [:source_2] Element initialized: Membrane.File.Source

20:23:52.414 [debug] [pipeline@<0.389.0>] Starting child: name: :decoder_3, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder

20:23:52.414 [debug] [pipeline@<0.389.0>] Bin start: :decoder_3
node: ,
module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder,
bin options: nil


20:23:52.414 [debug] [:decoder_3 bin] Initializing spec
children: %{decoder: Membrane.H264.FFmpeg.Decoder, parser: Membrane.H264.FFmpeg.Parser}
links: [%Membrane.ParentSpec.LinkBuilder{children: [], links: [%{from: :decoder, from_pad: :output, from_pad_props: %{options: []}, to: {Membrane.Bin, :itself}, to_pad: :output, to_pad_props: %{}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :decoder, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}, %{from: {Membrane.Bin, :itself}, from_pad: :input, from_pad_props: %{}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: 1, toilet_capacity: nil}}], status: :done}]


20:23:52.414 [debug] [:decoder_3 bin] Starting children: [%Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56867>, playback_sync: :not_synced, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.3206031225.1495531521.56867>, playback_sync: :not_synced, terminating?: false}]

20:23:52.414 [debug] [:decoder_3 bin] Starting child: name: :decoder, module: Membrane.H264.FFmpeg.Decoder

20:23:52.414 [debug] [:decoder_3 bin] Element start: :decoder
node: ,
module: Membrane.H264.FFmpeg.Decoder,
element options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false},
method: start


20:23:52.415 [debug] [:decoder] Initializing element: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}

20:23:52.415 [debug] [:decoder] Element initialized: Membrane.H264.FFmpeg.Decoder

20:23:52.415 [debug] [:decoder_3 bin] Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser

20:23:52.415 [debug] [:decoder_3 bin] Element start: :parser
node: ,
module: Membrane.H264.FFmpeg.Parser,
element options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true},
method: start


20:23:52.415 [debug] [:parser] Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}

20:23:52.415 [debug] [:parser] Element initialized: Membrane.H264.FFmpeg.Parser

20:23:52.415 [debug] [:parser] Element handle link on pad :output with pad :input of child :decoder

20:23:52.415 [debug] [:decoder] Element handle link on pad :input with pad :output of child :parser

20:23:52.415 [debug] [:decoder_3 bin] Spec #Reference<0.3206031225.1495531521.56867> linked internally

20:23:52.415 [debug] [:decoder_3 bin] Linking spec #Reference<0.3206031225.1495531521.56867> externally

20:23:52.415 [debug] [pipeline@<0.389.0>] Starting child: name: :source_3, module: Membrane.File.Source

20:23:52.415 [debug] [pipeline@<0.389.0>] Element start: :source_3
node: ,
module: Membrane.File.Source,
element options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048},
method: start


20:23:52.415 [debug] [:source_3] Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}

20:23:52.415 [debug] [:source_3] Element initialized: Membrane.File.Source

20:23:52.416 [debug] [:decoder_3 bin] Received link request on pad :input

20:23:52.416 [debug] [:decoder_0 bin] Received link request on pad :input

20:23:52.416 [debug] [:decoder_3 bin] Sending link response, :input

20:23:52.416 [debug] [:decoder_3 bin] Received link request on pad :output

20:23:52.416 [debug] [:decoder_0 bin] Sending link response, :input

20:23:52.416 [debug] [:decoder_3 bin] Sending link response, :output

20:23:52.416 [debug] [:decoder_0 bin] Received link request on pad :output

20:23:52.416 [debug] [:decoder_0 bin] Sending link response, :output

20:23:52.416 [debug] [:decoder_2 bin] Received link request on pad :input

20:23:52.416 [debug] [:decoder_2 bin] Sending link response, :input

20:23:52.416 [debug] [:decoder_1 bin] Received link request on pad :input

20:23:52.416 [debug] [:decoder_2 bin] Received link request on pad :output

20:23:52.416 [debug] [:decoder_1 bin] Sending link response, :input

20:23:52.416 [debug] [:decoder_2 bin] Sending link response, :output

20:23:52.416 [debug] [:decoder_1 bin] Received link request on pad :output

20:23:52.416 [debug] [:decoder_1 bin] Sending link response, :output

20:23:52.420 [debug] [:compositor] Element handle link on pad :output with pad :input of child :encoder

20:23:52.420 [debug] [:encoder] Element handle link on pad :input with pad :output of child :compositor

20:23:52.420 [debug] [:encoder] Element handle link on pad :output with pad :input of child :sink

20:23:52.420 [debug] [:sink] Element handle link on pad :input with pad :output of child :encoder

20:23:52.422 [debug] [:source_0] Element handle link on pad :output with pad :input of child :decoder_0

20:23:52.422 [debug] [:parser] Element handle link on pad :input with pad :output of child :source_0

20:23:52.422 [debug] [:decoder] Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>} of child :compositor

20:23:52.422 [debug] [:compositor] Element handle link on pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>} with pad :output of child :decoder

20:23:52.422 [debug] [:decoder_0 bin] Spec #Reference<0.3206031225.1495531521.56728> linked externally

20:23:52.424 [debug] [:decoder_0 bin] Spec playback init #Reference<0.3206031225.1495531521.56728> %{decoder: %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.397.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56728>, playback_sync: :not_synced, terminating?: false}, parser: %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.398.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56728>, playback_sync: :not_synced, terminating?: false}}

20:23:52.424 [debug] [:decoder_0 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.397.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56728>, playback_sync: :not_synced, terminating?: false}

20:23:52.424 [debug] [:decoder_0 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.398.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56728>, playback_sync: :not_synced, terminating?: false}

20:23:52.424 [debug] [:source_1] Element handle link on pad :output with pad :input of child :decoder_1

20:23:52.424 [debug] [:parser] Element handle link on pad :input with pad :output of child :source_1

20:23:52.424 [debug] [:decoder] Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>} of child :compositor

20:23:52.425 [debug] [:compositor] Element handle link on pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>} with pad :output of child :decoder

20:23:52.425 [debug] [:decoder_1 bin] Spec #Reference<0.3206031225.1495531521.56804> linked externally

20:23:52.425 [debug] [:decoder_1 bin] Spec playback init #Reference<0.3206031225.1495531521.56804> %{decoder: %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.403.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56804>, playback_sync: :not_synced, terminating?: false}, parser: %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.404.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56804>, playback_sync: :not_synced, terminating?: false}}

20:23:52.425 [debug] [:decoder_1 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.403.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56804>, playback_sync: :not_synced, terminating?: false}

20:23:52.425 [debug] [:decoder_1 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.404.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56804>, playback_sync: :not_synced, terminating?: false}

20:23:52.425 [debug] [:source_2] Element handle link on pad :output with pad :input of child :decoder_2

20:23:52.425 [debug] [:parser] Element handle link on pad :input with pad :output of child :source_2

20:23:52.425 [debug] [:decoder] Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>} of child :compositor

20:23:52.425 [debug] [:compositor] Element handle link on pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>} with pad :output of child :decoder

20:23:52.425 [debug] [:decoder_2 bin] Spec #Reference<0.3206031225.1495531521.56841> linked externally

20:23:52.425 [debug] [:decoder_2 bin] Spec playback init #Reference<0.3206031225.1495531521.56841> %{decoder: %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.409.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56841>, playback_sync: :not_synced, terminating?: false}, parser: %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.410.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56841>, playback_sync: :not_synced, terminating?: false}}

20:23:52.425 [debug] [:decoder_2 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.409.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56841>, playback_sync: :not_synced, terminating?: false}

20:23:52.425 [debug] [:decoder_2 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.410.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56841>, playback_sync: :not_synced, terminating?: false}

20:23:52.425 [debug] [:source_3] Element handle link on pad :output with pad :input of child :decoder_3

20:23:52.425 [debug] [:parser] Element handle link on pad :input with pad :output of child :source_3

20:23:52.426 [debug] [:decoder] Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>} of child :compositor

20:23:52.426 [debug] [:compositor] Element handle link on pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>} with pad :output of child :decoder

20:23:52.426 [debug] [:decoder_3 bin] Spec #Reference<0.3206031225.1495531521.56867> linked externally

20:23:52.426 [debug] [:decoder_3 bin] Spec playback init #Reference<0.3206031225.1495531521.56867> %{decoder: %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.415.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56867>, playback_sync: :not_synced, terminating?: false}, parser: %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.416.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56867>, playback_sync: :not_synced, terminating?: false}}

20:23:52.426 [debug] [:decoder_3 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder, module: Membrane.H264.FFmpeg.Decoder, options: %Membrane.H264.FFmpeg.Decoder{use_shm?: false}, component_type: :element, pid: #PID<0.415.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56867>, playback_sync: :not_synced, terminating?: false}

20:23:52.426 [debug] [:decoder_3 bin] Initializing playback state :stopped %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: nil, sps: "", pps: "", alignment: :au, attach_nalus?: false, skip_until_keyframe?: false, skip_until_parameters?: true}, component_type: :element, pid: #PID<0.416.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56867>, playback_sync: :not_synced, terminating?: false}

20:23:52.426 [debug] [pipeline@<0.389.0>] Spec #Reference<0.3206031225.1495531521.56649> linked internally

20:23:52.426 [debug] [pipeline@<0.389.0>] Spec playback init #Reference<0.3206031225.1495531521.56649> %{compositor: %Membrane.ChildEntry{name: :compositor, module: Membrane.VideoCompositor, options: %Membrane.VideoCompositor{caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}}, component_type: :element, pid: #PID<0.393.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, decoder_0: %Membrane.ChildEntry{name: :decoder_0, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.395.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, decoder_1: %Membrane.ChildEntry{name: :decoder_1, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.401.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, decoder_2: %Membrane.ChildEntry{name: :decoder_2, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.407.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, decoder_3: %Membrane.ChildEntry{name: :decoder_3, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.413.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, encoder: %Membrane.ChildEntry{name: :encoder, module: Membrane.H264.FFmpeg.Encoder, options: %Membrane.H264.FFmpeg.Encoder{crf: 23, preset: :medium, profile: nil, use_shm?: false, max_b_frames: nil}, component_type: :element, pid: #PID<0.392.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, sink: %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/out-120s_1920x1080_60fps.h264"}, component_type: :element, pid: #PID<0.391.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, source_0: %Membrane.ChildEntry{name: :source_0, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.400.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, source_1: %Membrane.ChildEntry{name: :source_1, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.406.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, source_2: %Membrane.ChildEntry{name: :source_2, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.412.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}, source_3: %Membrane.ChildEntry{name: :source_3, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.418.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}}

20:23:52.426 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :compositor, module: Membrane.VideoCompositor, options: %Membrane.VideoCompositor{caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}}, component_type: :element, pid: #PID<0.393.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder_0, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.395.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder_1, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.401.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder_2, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.407.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :decoder_3, module: Membrane.VideoCompositor.Benchmark.Support.Pipeline.H264.ParserDecoder, options: nil, component_type: :bin, pid: #PID<0.413.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :encoder, module: Membrane.H264.FFmpeg.Encoder, options: %Membrane.H264.FFmpeg.Encoder{crf: 23, preset: :medium, profile: nil, use_shm?: false, max_b_frames: nil}, component_type: :element, pid: #PID<0.392.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/out-120s_1920x1080_60fps.h264"}, component_type: :element, pid: #PID<0.391.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :source_0, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.400.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :source_1, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.406.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :source_2, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.412.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.427 [debug] [pipeline@<0.389.0>] Initializing playback state :stopped %Membrane.ChildEntry{name: :source_3, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/wojciechbarczynski/membrane_video_compositor/membrane_video_compositor_plugin /benchmark/lib/tmp/fixtures/in-120s_1920x1080_60fps.h264", chunk_size: 2048}, component_type: :element, pid: #PID<0.418.0>, clock: nil, sync: :membrane_no_sync, spec_ref: #Reference<0.3206031225.1495531521.56649>, playback_sync: :not_synced, terminating?: false}

20:23:52.428 [debug] [pipeline@<0.389.0>] Changing playback state from stopped to prepared

20:23:52.428 [debug] [:decoder_0 bin] Changing playback state from stopped to prepared

20:23:52.428 [debug] [:decoder_2 bin] Changing playback state from stopped to prepared

20:23:52.428 [debug] [:decoder_1 bin] Changing playback state from stopped to prepared

20:23:52.428 [debug] [:decoder_3 bin] Changing playback state from stopped to prepared

20:23:52.456 [debug] [:decoder_1 bin] Playback state changed from stopped to prepared

20:23:52.456 [debug] [:decoder_0 bin] Playback state changed from stopped to prepared

20:23:52.456 [debug] [:decoder_3 bin] Playback state changed from stopped to prepared

20:23:52.456 [debug] [:decoder_2 bin] Playback state changed from stopped to prepared

20:23:52.456 [debug] [pipeline@<0.389.0>] Playback state changed from stopped to prepared

20:23:52.456 [debug] [pipeline@<0.389.0>] Changing playback state from prepared to playing

20:23:52.456 [debug] [:decoder_1 bin] Changing playback state from prepared to playing

20:23:52.456 [debug] [:decoder_3 bin] Changing playback state from prepared to playing

20:23:52.456 [debug] [:decoder_0 bin] Changing playback state from prepared to playing

20:23:52.456 [debug] [:decoder_2 bin] Changing playback state from prepared to playing

20:23:52.456 [debug] [:compositor] Sending caps through pad :output
Caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}


20:23:52.456 [debug] [:decoder] Evaluating playback buffer

20:23:52.456 [debug] [:encoder] Evaluating playback buffer

20:23:52.456 [debug] [:decoder] Evaluating playback buffer

20:23:52.456 [debug] [:parser] Evaluating playback buffer

20:23:52.456 [debug] [:parser] Evaluating playback buffer

20:23:52.456 [debug] [:decoder] Evaluating playback buffer

20:23:52.456 [debug] [:parser] Evaluating playback buffer

20:23:52.456 [debug] [:decoder] Evaluating playback buffer

20:23:52.456 [debug] [:parser] Evaluating playback buffer

20:23:52.459 [debug] [:sink] Evaluating playback buffer

20:23:52.460 [debug] [:compositor] Evaluating playback buffer

20:23:52.461 [debug] [:source_2] Sending caps through pad :output
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:source_0] Sending caps through pad :output
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:encoder] Received caps on pad :input
Caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}


20:23:52.461 [debug] [:source_2] Evaluating playback buffer

20:23:52.461 [debug] [:source_0] Evaluating playback buffer

20:23:52.461 [debug] [:source_3] Sending caps through pad :output
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:source_3] Evaluating playback buffer

20:23:52.461 [debug] [:parser] Received caps on pad :input
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:parser] Received caps on pad :input
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:source_1] Sending caps through pad :output
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:source_1] Evaluating playback buffer

20:23:52.461 [debug] [:parser] Received caps on pad :input
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:parser] Received caps on pad :input
Caps: %Membrane.RemoteStream{content_format: nil, type: :bytestream}


20:23:52.461 [debug] [:decoder_0 bin] Playback state changed from prepared to playing

20:23:52.461 [debug] [:decoder_1 bin] Playback state changed from prepared to playing

20:23:52.461 [debug] [:decoder_2 bin] Playback state changed from prepared to playing

20:23:52.461 [debug] [:decoder_3 bin] Playback state changed from prepared to playing

20:23:52.461 [debug] [pipeline@<0.389.0>] Playback state changed from prepared to playing

20:23:52.475 [debug] [:encoder] Sending caps through pad :output
Caps: %Membrane.H264{width: 3840, height: 2160, framerate: {60, 1}, stream_format: :byte_stream, profile: nil, alignment: :au, nalu_in_metadata?: false}


20:23:52.475 [debug] [:sink] Received caps on pad :input
Caps: %Membrane.H264{width: 3840, height: 2160, framerate: {60, 1}, stream_format: :byte_stream, profile: nil, alignment: :au, nalu_in_metadata?: false}


20:23:52.482 [debug] [:parser] Sending caps through pad :output
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.482 [debug] [:decoder] Received caps on pad :input
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.482 [debug] [:parser] Sending caps through pad :output
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.483 [debug] [:parser] Sending caps through pad :output
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.483 [debug] [:parser] Sending caps through pad :output
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.488 [debug] [:decoder] Received caps on pad :input
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.491 [debug] [:decoder] Received caps on pad :input
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.495 [debug] [:decoder] Sending caps through pad :output
Caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {0, 1}, pixel_format: :I420, aligned: true}


20:23:52.496 [debug] [:decoder] Sending caps through pad :output
Caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {0, 1}, pixel_format: :I420, aligned: true}


20:23:52.501 [debug] [:decoder] Sending caps through pad :output
Caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {0, 1}, pixel_format: :I420, aligned: true}


20:23:52.504 [debug] [:decoder] Received caps on pad :input
Caps: %Membrane.H264{width: 1920, height: 1080, framerate: {0, 1}, stream_format: :byte_stream, profile: :high, alignment: :au, nalu_in_metadata?: false}


20:23:52.511 [debug] [:decoder] Sending caps through pad :output
Caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {0, 1}, pixel_format: :I420, aligned: true}


20:23:52.512 [debug] [:compositor] Received caps on pad {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>}
Caps: %Membrane.RawVideo{width: 1920, height: 1080, framerate: {0, 1}, pixel_format: :I420, aligned: true}


20:23:53.326 [warning] [:compositor] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {%RuntimeError{message: "Error while adding a video, reason: :bad_framerate"}, [{Membrane.VideoCompositor.Wgpu, :add_video, 6, [file: 'lib/membrane/video_compositor/wgpu/wgpu.ex', line: 78, error_info: %{module: Exception}]}, {Membrane.VideoCompositor, :handle_caps, 4, [file: 'lib/membrane/video_compositor.ex', line: 113]}, {Membrane.Core.CallbackHandler, :exec_callback, 4, [file: 'lib/membrane/core/callback_handler.ex', line: 140]}, {Membrane.Core.CallbackHandler, :exec_and_handle_callback, 5, [file: 'lib/membrane/core/callback_handler.ex', line: 65]}, {Membrane.Core.Element.CapsController, :exec_handle_caps, 4, [file: 'lib/membrane/core/element/caps_controller.ex', line: 50]}, {Membrane.Core.Element, :handle_info, 2, [file: 'lib/membrane/core/element.ex', line: 177]}, {:gen_server, :try_dispatch, 4, [file: 'gen_server.erl', line: 1123]}, {:gen_server, :handle_msg, 6, [file: 'gen_server.erl', line: 1200]}]},
State: %Membrane.Core.Element.State{
  module: Membrane.VideoCompositor,
  type: :filter,
  name: :compositor,
  internal_state: %{
    caps: %Membrane.RawVideo{
      width: 3840,
      height: 2160,
      framerate: {60, 1},
      pixel_format: :I420,
      aligned: true
    },
    new_pad_id: 4,
    pads_to_ids: %{
      {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>} => 0,
      {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>} => 1,
      {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>} => 2,
      {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>} => 3
    },
    video_positions_waiting_for_caps: %{
      0 => {0, 0},
      1 => {0, 1080},
      2 => {1920, 0},
      3 => {1920, 1080}
    },
    video_scales_waiting_for_caps: %{0 => 1.0, 1 => 1.0, 2 => 1.0, 3 => 1.0},
    video_z_values_waiting_for_caps: %{0 => 0.0, 1 => 0.0, 2 => 0.0, 3 => 0.0},
    wgpu_state: #Reference<0.3206031225.1495662593.56711>
  },
  pads_info: %{
    input: %{
      accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]},
      availability: :on_request,
      demand_mode: :auto,
      demand_unit: :buffers,
      direction: :input,
      mode: :pull,
      name: :input,
      options: [
        position: [
          type: :tuple,
          spec: "{integer(), integer()}",
          description: "Initial position of the video on the screen, given in the pixels,\n          relative to the upper left corner of the screen",
          default: {0, 0}
        ],
        z_value: [
          type: :float,
          spec: "float()",
          description: "Specify which video should be on top of the others. Should be in (0, 1) range.\n          Videos with higher z_value will be displayed on top.",
          default: 0.0
        ],
        scale: [
          type: :float,
          spec: "float()",
          description: "Video scale factor.",
          default: 1.0
        ]
      ]
    },
    output: %{
      accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]},
      availability: :always,
      demand_mode: :auto,
      demand_unit: :buffers,
      direction: :output,
      mode: :pull,
      name: :output,
      options: nil
    }
  },
  pads_data: %{
    :output => %Membrane.Element.PadData{
      accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]},
      availability: :always,
      caps: %Membrane.RawVideo{
        width: 3840,
        height: 2160,
        framerate: {60, 1},
        pixel_format: :I420,
        aligned: true
      },
      start_of_stream?: false,
      end_of_stream?: false,
      direction: :output,
      mode: :pull,
      name: :output,
      ref: :output,
      options: %{},
      pid: #PID<0.392.0>,
      other_ref: :input,
      input_queue: nil,
      demand: 4000,
      demand_mode: :auto,
      demand_unit: :buffers,
      other_demand_unit: :buffers,
      auto_demand_size: nil,
      sticky_messages: [],
      toilet: nil,
      associated_pads: [
        {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>},
        {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>},
        {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>},
        {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>}
      ]
    },
    {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>} => %Membrane.Element.PadData{
      accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]},
      availability: :on_request,
      caps: nil,
      start_of_stream?: false,
      end_of_stream?: false,
      direction: :input,
      mode: :pull,
      name: :input,
      ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>},
      options: %{position: {0, 0}, scale: 1.0, z_value: 0.0},
      pid: #PID<0.397.0>,
      other_ref: :output,
      input_queue: nil,
      demand: 4000,
      demand_mode: :auto,
      demand_unit: :buffers,
      other_demand_unit: :buffers,
      auto_demand_size: 4000,
      sticky_messages: [],
      toilet: nil,
      associated_pads: [:output]
    },
    {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>} => %Membrane.Element.PadData{
      accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]},
      availability: :on_request,
      caps: nil,
      start_of_stream?: false,
      end_of_stream?: false,
      direction: :input,
      mode: :pull,
      name: :input,
      ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>},
      options: %{position: {0, 1080}, scale: 1.0, z_value: 0.0},
      pid: #PID<0.403.0>,
      other_ref: :output,
      input_queue: nil,
      demand: 4000,
      demand_mode: :auto,
      demand_unit: :buffers,
      other_demand_unit: :buffers,
      auto_demand_size: 4000,
      sticky_messages: [],
      toilet: nil,
      associated_pads: [:output]
    },
    {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>} => %Membrane.Element.PadData{
      accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]},
      availability: :on_request,
      caps: nil,
      start_of_stream?: false,
      end_of_stream?: false,
      direction: :input,
      mode: :pull,
      name: :input,
      ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>},
      options: %{position: {1920, 0}, scale: 1.0, z_value: 0.0},
      pid: #PID<0.409.0>,
      other_ref: :output,
      input_queue: nil,
      demand: 4000,
      demand_mode: :auto,
      demand_unit: :buffers,
      other_demand_unit: :buffers,
      auto_demand_size: 4000,
      sticky_messages: [],
      toilet: nil,
      associated_pads: [:output]
    },
    {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>} => %Membrane.Element.PadData{
      accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]},
      availability: :on_request,
      caps: nil,
      start_of_stream?: false,
      end_of_stream?: false,
      direction: :input,
      mode: :pull,
      name: :input,
      ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>},
      options: %{position: {1920, 1080}, scale: 1.0, z_value: 0.0},
      pid: #PID<0.415.0>,
      other_ref: :output,
      input_queue: nil,
      demand: 4000,
      demand_mode: :auto,
      demand_unit: :buffers,
      other_demand_unit: :buffers,
      auto_demand_size: 4000,
      sticky_messages: [],
      toilet: nil,
      associated_pads: [:output]
    }
  },
  parent_pid: #PID<0.389.0>,
  playback: %Membrane.Core.Playback{
    state: :playing,
    pending_state: nil,
    target_state: :playing,
    async_state_change: false
  },
  playback_buffer: %Membrane.Core.Element.PlaybackBuffer{q: #Qex<[]>},
  supplying_demand?: false,
  delayed_demands: MapSet.new([]),
  synchronization: %{
    clock: nil,
    latency: 0,
    parent_clock: #PID<0.390.0>,
    stream_sync: :membrane_no_sync,
    timers: %{}
  },
  demand_size: nil
}


20:23:54.251 [error] GenServer #PID<0.393.0> terminating
** (RuntimeError) Error while adding a video, reason: :bad_framerate
    (membrane_video_compositor_plugin 0.1.0) lib/membrane/video_compositor/wgpu/wgpu.ex:78: Membrane.VideoCompositor.Wgpu.add_video/6
    (membrane_video_compositor_plugin 0.1.0) lib/membrane/video_compositor.ex:113: Membrane.VideoCompositor.handle_caps/4
    (membrane_core 0.10.2) lib/membrane/core/callback_handler.ex:140: Membrane.Core.CallbackHandler.exec_callback/4
    (membrane_core 0.10.2) lib/membrane/core/callback_handler.ex:65: Membrane.Core.CallbackHandler.exec_and_handle_callback/5
    (membrane_core 0.10.2) lib/membrane/core/element/caps_controller.ex:50: Membrane.Core.Element.CapsController.exec_handle_caps/4
    (membrane_core 0.10.2) lib/membrane/core/element.ex:177: Membrane.Core.Element.handle_info/2
    (stdlib 4.1.1) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.1.1) gen_server.erl:1200: :gen_server.handle_msg/6
Last message: {Membrane.Core.Message, :caps, %Membrane.RawVideo{width: 1920, height: 1080, framerate: {0, 1}, pixel_format: :I420, aligned: true}, [for_pad: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>}]}
State: %Membrane.Core.Element.State{module: Membrane.VideoCompositor, type: :filter, name: :compositor, internal_state: %{caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}, new_pad_id: 4, pads_to_ids: %{{Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>} => 0, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>} => 1, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>} => 2, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>} => 3}, video_positions_waiting_for_caps: %{0 => {0, 0}, 1 => {0, 1080}, 2 => {1920, 0}, 3 => {1920, 1080}}, video_scales_waiting_for_caps: %{0 => 1.0, 1 => 1.0, 2 => 1.0, 3 => 1.0}, video_z_values_waiting_for_caps: %{0 => 0.0, 1 => 0.0, 2 => 0.0, 3 => 0.0}, wgpu_state: #Reference<0.3206031225.1495662593.56711>}, pads_info: %{input: %{accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]}, availability: :on_request, demand_mode: :auto, demand_unit: :buffers, direction: :input, mode: :pull, name: :input, options: [position: [type: :tuple, spec: "{integer(), integer()}", description: "Initial position of the video on the screen, given in the pixels,\n          relative to the upper left corner of the screen", default: {0, 0}], z_value: [type: :float, spec: "float()", description: "Specify which video should be on top of the others. Should be in (0, 1) range.\n          Videos with higher z_value will be displayed on top.", default: 0.0], scale: [type: :float, spec: "float()", description: "Video scale factor.", default: 1.0]]}, output: %{accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]}, availability: :always, demand_mode: :auto, demand_unit: :buffers, direction: :output, mode: :pull, name: :output, options: nil}}, pads_data: %{:output => %Membrane.Element.PadData{accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]}, availability: :always, caps: %Membrane.RawVideo{width: 3840, height: 2160, framerate: {60, 1}, pixel_format: :I420, aligned: true}, start_of_stream?: false, end_of_stream?: false, direction: :output, mode: :pull, name: :output, ref: :output, options: %{}, pid: #PID<0.392.0>, other_ref: :input, input_queue: nil, demand: 4000, demand_mode: :auto, demand_unit: :buffers, other_demand_unit: :buffers, auto_demand_size: nil, sticky_messages: [], toilet: nil, associated_pads: [{Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>}, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>}, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>}, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>}]}, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>} => %Membrane.Element.PadData{accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]}, availability: :on_request, caps: nil, start_of_stream?: false, end_of_stream?: false, direction: :input, mode: :pull, name: :input, ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56277>}, options: %{position: {0, 0}, scale: 1.0, z_value: 0.0}, pid: #PID<0.397.0>, other_ref: :output, input_queue: nil, demand: 4000, demand_mode: :auto, demand_unit: :buffers, other_demand_unit: :buffers, auto_demand_size: 4000, sticky_messages: [], toilet: nil, associated_pads: [:output]}, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>} => %Membrane.Element.PadData{accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]}, availability: :on_request, caps: nil, start_of_stream?: false, end_of_stream?: false, direction: :input, mode: :pull, name: :input, ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56280>}, options: %{position: {0, 1080}, scale: 1.0, z_value: 0.0}, pid: #PID<0.403.0>, other_ref: :output, input_queue: nil, demand: 4000, demand_mode: :auto, demand_unit: :buffers, other_demand_unit: :buffers, auto_demand_size: 4000, sticky_messages: [], toilet: nil, associated_pads: [:output]}, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>} => %Membrane.Element.PadData{accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]}, availability: :on_request, caps: nil, start_of_stream?: false, end_of_stream?: false, direction: :input, mode: :pull, name: :input, ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56283>}, options: %{position: {1920, 0}, scale: 1.0, z_value: 0.0}, pid: #PID<0.409.0>, other_ref: :output, input_queue: nil, demand: 4000, demand_mode: :auto, demand_unit: :buffers, other_demand_unit: :buffers, auto_demand_size: 4000, sticky_messages: [], toilet: nil, associated_pads: [:output]}, {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>} => %Membrane.Element.PadData{accepted_caps: {Membrane.RawVideo, [pixel_format: :I420]}, availability: :on_request, caps: nil, start_of_stream?: false, end_of_stream?: false, direction: :input, mode: :pull, name: :input, ref: {Membrane.Pad, :input, #Reference<0.3206031225.1495531525.56286>}, options: %{position: {1920, 1080}, scale: 1.0, z_value: 0.0}, pid: #PID<0.415.0>, other_ref: :output, input_queue: nil, demand: 4000, demand_mode: :auto, demand_unit: :buffers, other_demand_unit: :buffers, auto_demand_size: 4000, sticky_messages: [], toilet: nil, associated_pads: [:output]}}, parent_pid: #PID<0.389.0>, playback: %Membrane.Core.Playback{state: :playing, pending_state: nil, target_state: :playing, async_state_change: false}, playback_buffer: %Membrane.Core.Element.PlaybackBuffer{q: #Qex<[]>}, supplying_demand?: false, delayed_demands: MapSet.new([]), synchronization: %{clock: nil, latency: 0, parent_clock: #PID<0.390.0>, stream_sync: :membrane_no_sync, timers: %{}}, demand_size: nil}

20:23:56.788 [debug] [pipeline@<0.389.0>] Pipeline child crashed but was not a member of any crash group.
Terminating.


20:23:56.788 [debug] [pipeline@<0.389.0>] A child crashed but was not a member of any crash group.
Terminating.


20:23:56.788 [debug] [:source_0] Shutting down because of pipeline failure
Reason: {:shutdown, :child_crash}


20:23:56.788 [debug] [:encoder] Shutting down because of pipeline failure
Reason: {:shutdown, :child_crash}


20:23:56.788 [debug] [:source_0] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :child_crash}"


20:23:56.788 [debug] [:encoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :child_crash}"


20:23:56.788 [debug] [:source_0] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.788 [debug] [:encoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.790 [debug] [:source_1] Shutting down because of pipeline failure
Reason: {:shutdown, :child_crash}


20:23:56.790 [debug] [:source_1] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :child_crash}"


20:23:56.790 [debug] [:source_1] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.806 [debug] [:sink] Shutting down because of pipeline failure
Reason: {:shutdown, :child_crash}


20:23:56.806 [debug] [:sink] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :child_crash}"


20:23:56.806 [debug] [:sink] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.806 [debug] [:source_3] Shutting down because of pipeline failure
Reason: {:shutdown, :child_crash}


20:23:56.806 [debug] [:source_3] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :child_crash}"


20:23:56.806 [debug] [:source_3] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.806 [debug] [:parser] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:23:56.806 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.806 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.807 [debug] [:source_2] Shutting down because of pipeline failure
Reason: {:shutdown, :child_crash}


20:23:56.807 [debug] [:source_2] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :child_crash}"


20:23:56.807 [debug] [:parser] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:23:56.807 [debug] [:source_2] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.807 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.807 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.807 [debug] [:parser] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:23:56.807 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.807 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.807 [debug] [:parser] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:23:56.807 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:23:56.807 [debug] [:parser] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.154 [debug] [:decoder] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:24:19.154 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.154 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.438 [debug] [:decoder] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:24:19.438 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.438 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.499 [debug] [:decoder] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:24:19.499 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.499 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.502 [debug] [:decoder] Shutting down because of pipeline failure
Reason: {:shutdown, :parent_crash}


20:24:19.502 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"


20:24:19.502 [debug] [:decoder] Terminating element possibly not prepared for termination as it was in state :playing.
Reason: {:shutdown, :parent_crash}"

